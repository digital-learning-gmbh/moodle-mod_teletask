// Generated by CoffeeScript 1.4.0
(function() {

  define(function() {
    var Chapter, Chapters;
    Chapter = (function() {

      function Chapter(title, time, thumb) {
        this.title = title;
        this.time = time;
        this.thumb = thumb;
        this.active = false;
      }

      return Chapter;

    })();
    return Chapters = (function() {

      function Chapters(player, container) {
        this.player = player;
        this.container = container;
        this.chapters = [];
        this.loadChapters();
        this.lastActiveChapter = null;
      }

      Chapters.prototype.loadChapters = function() {
        /*
                load chapter data with ajax; setting async to false to make sure chapters
                are loaded before generating the list
        */

        var li, _i, _len, _ref, _results,
          _this = this;
        _ref = this.container.find('li');
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          li = _ref[_i];
          _results.push((function(li) {
            var chapter, thumb, time, title;
            li = $(li);
            title = li.html;
            time = li.data('start');
            thumb = li.data('thumb');
            chapter = new Chapter(title, time, thumb);
            _this.chapters.push(chapter);
            return _this.bindClickEvent(li, time);
          })(li));
        }
        return _results;
      };

      Chapters.prototype.setActiveChapter = function(time) {
        var chapter, i, _i, _j, _len, _ref, _ref1;
        _ref = this.chapters;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          chapter = _ref[_i];
          chapter.active = false;
        }
        for (i = _j = _ref1 = this.chapters.length - 1; _j >= 0; i = _j += -1) {
          if (time >= this.chapters[i].time) {
            this.chapters[i].active = true;
            break;
          }
        }
        if (i !== this.lastActiveChapter) {
          this.container.find("li").eq(this.lastActiveChapter).removeClass("active");
          this.container.find("li").eq(i).addClass("active");
          return this.lastActiveChapter = i;
        }
      };

      Chapters.prototype.bindClickEvent = function(element, seconds) {
        var _this = this;
        return element.on("click", function(event) {
          _this.player.seek(seconds);
          return _this.setActiveChapter(seconds);
        });
      };

      Chapters.prototype.jumpToChapter = function(number) {
        return this.player.seek(this.chapters[number - 1].time);
      };

      return Chapters;

    })();
  });

}).call(this);
