// Generated by CoffeeScript 1.8.0
(function() {
  define(function() {

    /*
      This class is responsible for the quizzes that are loaded and displayed for each lecture
     */
    var Quiz;
    return Quiz = (function() {
      function Quiz(player, question_id, course_id, question, description, answers, right_answers, explanation, type, time) {
        var _this;
        this.player = player;
        this.question_id = question_id;
        this.course_id = course_id;
        this.question = question;
        this.description = description;
        this.answers = answers;
        this.right_answers = right_answers;
        this.explanation = explanation;
        this.type = type;
        this.time = time;
        this.shown_yet = false;
        this.is_active = false;
        _this = this;
        this.$closeButtons = $(".close-quiz, .close");
        this.$submitButton = $(".submit-quiz");
        this.$quizContent = $(".quizContent");
        this.$answer = $(".answers");
        this.$question = $("#question");
        this.$description = $(".description");
        this.$right_wrong = $("div[name=right_wrong]");
        this.$explanation = $("div[name=explanation]");
        this.player.$videoA.on("timeupdate", function() {
          if (_this.player.quizEnabled && !_this.shown_yet && _this.player.videoA.currentTime >= _this.time && !_this.$question.text()) {
            _this.shown_yet = true;
            _this.is_active = true;
            return _this.showQuestion();
          }
        });
        this.attachButtonHandlers();
      }

      Quiz.prototype.attachButtonHandlers = function() {
        this.$submitButton.click((function(_this) {
          return function() {
            if (_this.is_active) {
              return _this.submit();
            }
          };
        })(this));
        return this.$closeButtons.click((function(_this) {
          return function() {
            if (_this.is_active) {
              _this.close();
              return _this.is_active = false;
            }
          };
        })(this));
      };

      Quiz.prototype.showQuestion = function() {
        var answer, _i, _j, _len, _len1, _ref, _ref1;

        //Show Submit Button
        this.$submitButton.show("fast");

        this.$question.text(this.question);
        if(this.description != ""){
          this.$description.text("Description: " + this.description);
        }
        count = 0;
        if (this.type === "single") {
          _ref = this.answers.split(", ");
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            answer = _ref[_i];
            this.$answer.append("<input type=\"radio\" id=\"radiobox"+ count +"\" value=\"" + answer + "\" class=\"answer clearfix\" name=\"answer\"><label for=\"radiobox"+ count +"\">" + answer + "</label><br>");
            count++;
          }
        } else {
          if (this.type === "multi") {
            _ref1 = this.answers.split(", ");
            for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
              answer = _ref1[_j];
              this.$answer.append("<input type=\"checkbox\" id=\"checkbox"+ count +"\" value=\"" + answer + "\"class=\"answer clearfix\"><label for=\"checkbox"+ count +"\">" + answer + "</label><br>");
              count++;
            }
          } else {
            this.$answer.append("<input type=\"text\" name=\"answer\"></input>");
          }
        }
        this.player.pause();
        this.$quizContent.show("slow");
        return this.$quizContent.addClass("visible");
      };

      Quiz.prototype.close = function() {
        this.$quizContent.removeClass("visible");
        this.$quizContent.hide("slow");
        this.player.play();
        this.$question.empty();
        this.$description.empty();
        this.$answer.empty();
        this.$right_wrong.empty();
        this.$explanation.empty();
      };

      Quiz.prototype.submit = function() {
        var answer, checked, completely_right, displayResult, markSolution, _this;

        //Remove Submit Button
        this.$submitButton.hide("fast");

        markSolution = function(elem, is_right) {

          /*mark right elements green with underlines and wrong with red line-throughs */
          if (is_right) {
            $(elem).parent().find("label:contains('"+ elem.attr("value") +"')").css("color", "LimeGreen");
            $(elem).parent().find("label:contains('"+ elem.attr("value") +"')").css("text-decoration", "underline");
          } else {
            $(elem).parent().find("label:contains('"+ elem.attr("value") +"')").css("color", "orange");
            $(elem).parent().find("label:contains('"+ elem.attr("value") +"')").css("text-decoration", "line-through");
          }
        };
        displayResult = function(is_right, answer, right_answer) {

          /*provide a small explanation whether the given answer was right or not */
          var $result;
          $result = $("div[name=right_wrong]");
          if (is_right) {
            $result.text(answer + " ist richtig!");
            $result.css("color", "LimeGreen");
          } else {
            if (answer) {
              $result.text("\"" + answer + "\" is wrong. The right answer is \"" + right_answer + "\".");
            } else {
              $result.text("The right answer is \"" + right_answer + "\".");
            }
            $result.css("color", "orange");
          }

          /*check the given answers for their correctness */
        };
        _this = this;
        right_answers = _this.right_answers.split(", ");
        switch (_this.type) {
          case "single":
            checked = $("input[name=answer]:checked", ".answers");
            if (checked.val() === right_answers[0]) {
              markSolution(checked, true);
              displayResult(true, checked.val(), null);
              $.post("/selftest/lecture/submission/" + _this.question_id + "/", {givenanswer: checked.val(), correct: "true"}, function(data) {
                _this.$explanation.text(data);
              }, "text");
            } else {
              markSolution(checked, false);
              markSolution($("input[value=\"" + right_answers[0] + "\"]", ".answers"), true);
              displayResult(false, checked.val(),right_answers[0]);
              $.post("/selftest/lecture/submission/" + _this.question_id + "/", {givenanswer: checked.val(), correct: "false"}, function(data) {
                _this.$explanation.text(data);
              }, "text");
            }
            break;
          case "multi":
            completely_right = true;
            useranswer = []
            $(".answer").each(function() {
              if ($(this).is(":checked")) {
                useranswer.push($(this).attr("value"));
                if ($.inArray($(this).attr("value"), right_answers) !== -1) {
                  markSolution($(this), true);
                } else {
                  markSolution($(this), false);
                  completely_right = false;
                }
              } else {
                if ($.inArray($(this).attr("value"), right_answers) === -1) {
                  markSolution($(this), true);
                } else {
                  markSolution($(this), false);
                  completely_right = false;
                }
              }
            });

            if (completely_right) {
              displayResult(true, right_answers.join(" and "), null);
              $.post("/selftest/lecture/submission/" + _this.question_id + "/", {givenanswer: useranswer.join(", "), correct: "True"}, function(data) {
                _this.$explanation.text(data);
              }, "text");
            } else {
              displayResult(false, null, right_answers.join("\" and \""));
              $.post("/selftest/lecture/submission/" + _this.question_id + "/", {givenanswer: useranswer.join(", "), correct: "False"}, function(data) {
                _this.$explanation.text(data);
              }, "text");
            }

            break;
          default:
            answer = $("input[name=answer]", ".answers").val();
            if (answer === _this.right_answers[0]) {
              displayResult(true, answer, _this.right_answers[0]);
              $.post("/selftest/lecture/submission/" + _this.question_id + "/", {givenanswer: answer, correct: "True"}, function(data) {
                _this.$explanation.text(data);
              }, "text");
            } else {
              displayResult(false, answer, _this.right_answers[0]);
              $.post("/selftest/lecture/submission/" + _this.question_id + "/", {givenanswer: answer, correct: "False"}, function(data) {
                _this.$explanation.text(data);
              }, "text");
            }
        }
        //this.$explanation.text(this.explanation);
      };

      return Quiz;

    })();
  });

}).call(this);
